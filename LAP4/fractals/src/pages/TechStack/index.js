import React, { useState, useRef, useEffect } from 'react';
import './style.css'
import { } from "./assets/animate.js"
import { TechBubble } from '../../components';



const TechStack = () => {
    // var rows = [];
    // for (var i = 0; i < 20; i++) {
    //     //  key prop allow react uniquely identify each techBubble in Array
    //     rows.push(<TechBubble key={i} />);
    // }


    // I used https://cdn.jsdelivr.net/npm/simple-icons@v5/icons/greensock.svg with https://github.com/simple-icons/simple-icons/blob/HEAD/slugs.md


    //randomise array using knuth
    const shuffle = (arr) => {
        let c = arr.length, rand;
        while (0 !== c) {
            rand = Math.floor(Math.random() * c);
            c--;
            [arr[c], arr[rand]] = [
                arr[rand], arr[c]];
        }
        return arr;
    }


    // Checkboxes

    const [checked, setChecked] = React.useState(true);

    let handleCheck = (e) => {
        e.preventDefault();
        setChecked(!checked)
    }


    const items = useRef([]);
    items.current = [];

    const addToRefs = (el) => {
        items.current = [...items.current, el]
        console.log(items.current = [])
    };


    //  render 

    const renderTechBubbles = () => shuffle(techStackBub).map((t) => <TechBubble key={t.name} TechName={t.name} Path={t.Path} forwardRef={addToRefs} />)

    return (

        <div id="Techsect" className="bg-white raleway  my-20" ref={addToRefs} >

            <div className="w-full h-auto flex flex-col gradientTech md:justify-start pb-12 my-auto pt-8 md:pt-0 overflow-hidden text-white">
                <div className=" px-8  flex flex-col">
                    <div className=" w-full md:px-24 lg:px-44  ">
                        <div class="flex w-full mt-12 justify-between">
                            <h1 className=" text-left text-4xl font-extrabold ">What are Fractals?</h1>
                        </div>
                        <p className=" text-left text-xl w-full"> A fractal is a never-ending pattern. Fractals are infinitely complex patterns that are self-similar across different scales. They are created by repeating a simple process over and over in an ongoing feedback loop. Driven by recursion, fractals are images of dynamic systems – the pictures of Chaos. Geometrically, they exist in between our familiar dimensions. Fractal patterns are extremely familiar, since nature is full of fractals. For instance: trees, rivers, coastlines, mountains, clouds, seashells, hurricanes, etc. Abstract fractals – such as the Mandelbrot Set – can be generated by a computer calculating a simple equation over and over.
                        </p></div>


                </div>

                <div className="grid grid-cols-3 lg:grid-cols-6 gap-14 w-full h-full pt-8 p-4">



                </div>


            </div>



        </div>

    )


}

export default TechStack;
